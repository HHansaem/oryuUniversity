<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.club.dao.ClubDAO">
<sql id="searchFrag">
		<trim prefix=" WHERE ">
        	<if test="simpleCondition neq null and simpleCondition.searchWord neq null and not simpleCondition.searchWord.isEmpty()">
        		<choose>
        			<when test="simpleCondition.searchType eq 'clubNm'">
        				INSTR(CLUB_NM, #{simpleCondition.searchWord}) > 0 
        			</when>
        			<otherwise>
	        			INSTR(CLUB_NM, #{simpleCondition.searchWord}) > 0
        			</otherwise>
        		</choose>
        	</if>
        </trim>
	</sql>

<sql id="searchFrag2">
        	<if test="simpleCondition neq null and simpleCondition.searchWord neq null and not simpleCondition.searchWord.isEmpty()">
        		<choose>
        			<when test="simpleCondition.searchType eq 'prNm'">
        				INSTR(PR_NM, #{simpleCondition.searchWord}) > 0 
        			</when>
        			<when test="simpleCondition.searchType eq 'prCd'">
        				INSTR(PR_CD, #{simpleCondition.searchWord}) > 0 
        			</when>
        			<when test="simpleCondition.searchType eq 'dtNm'">
        				INSTR(DT_NM, #{simpleCondition.searchWord}) > 0 
        			</when>
        			<otherwise>
        			
	        		INSTR(PR_NM, #{simpleCondition.searchWord}) > 0 
	        		OR 
	        		INSTR(PR_CD, #{simpleCondition.searchWord}) > 0 
	        		OR
	        		INSTR(DT_NM, #{simpleCondition.searchWord}) > 0 
        			
        			</otherwise>
        		</choose>
        	</if>
	</sql>
 
 <sql id="pro_info">
 WITH PRO_INFO AS( SELECT PR_CD, P.DT_CD, PR_NM, PR_PH, PR_EMAIL, PR_PASS, PR_PIC, PR_ROLE, 
PR_STATUS, PR_ADDR1, PR_ADDR2, PR_REG1, PR_REG2 , COLGE_CD , ATCH_FILE_ID , DT_NM  , DT_ONNER_NM 
, DT_ADDR , DT_PH , DT_EST , DT_STAT , DT_URL FROM PROFESSOR P INNER JOIN DEPARTMENT D ON P.DT_CD 
= D.DT_CD )
 </sql>
 
 
<insert id="insertClub" parameterType="kr.or.ddit.club.vo.ClubVO">
  INSERT INTO CLUB(CLUB_CD, ST_CD, PR_CD, CLUB_NM, CLUB_PLAN, CLUB_STATUS, CLUB_APP_DATE)
  VALUES(CLUB_SEQ.NEXTVAL, #{stCd}, (SELECT PR_CD FROM PROFESSOR WHERE PR_NM=#{professorVO.prNm}),
         #{clubNm}, #{clubPlan}, #{clubStatus}, SYSDATE)
</insert>

<select id="insertViewClub" parameterType="kr.or.ddit.club.vo.ClubVO" resultType="kr.or.ddit.club.vo.ClubVO">
SELECT C.CLUB_CD,C.ST_CD, S.ST_NM AS "STUDENTVO.stNm", P.PR_NM AS "PROFESSORVO.prNm", C.CLUB_NM
, C.CLUB_PLAN, C.CLUB_APP_DATE, C.CLUB_STATUS, C.CLUB_REFUSE 
FROM CLUB C 
INNER JOIN student S ON C.ST_CD = S.ST_CD 
INNER JOIN professor P ON C.PR_CD = P.PR_CD 
WHERE C.CLUB_CD = #{clubCd}
</select>

<select id="insertSListClub" parameterType="kr.or.ddit.club.vo.ClubVO" resultType="kr.or.ddit.club.vo.ClubVO">
SELECT C.CLUB_CD,C.ST_CD, S.ST_NM AS "STUDENTVO.stNm", P.PR_NM AS "PROFESSORVO.prNm", C.CLUB_NM, C.CLUB_PLAN, C.CLUB_STATUS 
FROM CLUB C 
INNER JOIN STUDENT S ON C.ST_CD = S.ST_CD 
INNER JOIN PROFESSOR P ON C.PR_CD = P.PR_CD 
WHERE C.ST_CD = #{Cd}
</select>

<select id="insertPListClub" parameterType="kr.or.ddit.club.vo.ClubVO" resultType="kr.or.ddit.club.vo.ClubVO">
SELECT C.CLUB_CD,C.ST_CD, S.ST_NM AS "STUDENTVO.stNm", P.PR_NM AS "PROFESSORVO.prNm", C.CLUB_NM, C.CLUB_PLAN, C.CLUB_STATUS 
FROM CLUB C 
INNER JOIN student S ON C.ST_CD = S.ST_CD 
INNER JOIN professor P ON C.PR_CD = P.PR_CD 
WHERE C.PR_CD=#{Cd} AND C.CLUB_STATUS = '신청'
</select>

<select id="RequestListClub" resultType="kr.or.ddit.club.vo.ClubVO">
SELECT C.CLUB_CD,C.ST_CD, S.ST_NM AS "STUDENTVO.stNm", P.PR_NM AS "PROFESSORVO.prNm", C.CLUB_NM, C.CLUB_PLAN, C.CLUB_STATUS 
FROM CLUB C 
INNER JOIN student S ON C.ST_CD = S.ST_CD 
INNER JOIN professor P ON C.PR_CD = P.PR_CD 
WHERE CLUB_STATUS = '확인'
</select>

<select id="checkClub" resultType="kr.or.ddit.club.vo.ClubVO">
SELECT * FROM CLUB C 
WHERE 
CASE
  WHEN ST_CD = #{Cd} AND CLUB_STATUS = '승인' THEN 1
  WHEN PR_CD = #{Cd} AND CLUB_STATUS = '승인' THEN 1
  ELSE 0
 END = 1
</select>

<select id ="myClub" parameterType="kr.or.ddit.club.vo.ClubVO" resultType="kr.or.ddit.club.vo.ClubVO">
SELECT C.CLUB_CD, C.PR_CD, C.ST_CD, C.CLUB_STAT, C.CLUB_CLOSED, C.CLUB_DETAIL, C.CLUB_FIC_FILE
, C.CLUB_NM, C.CLUB_PLAN, C.CLUB_APP_DATE, C.CLUB_STATUS, C.CLUB_REFUSE, S.ST_NM AS "STUDENTVO.stNm"
, P.PR_NM AS "PROFESSORVO.prNm"
FROM CLUB C 
INNER JOIN student S ON C.ST_CD = S.ST_CD 
INNER JOIN professor P ON C.PR_CD = P.PR_CD 
WHERE C.CLUB_STATUS = '승인' AND (C.ST_CD=#{Cd} OR P.PR_CD=#{Cd})
</select>


<select id="clubListView" parameterType="kr.or.ddit.common.vo.PaginationInfo" resultType="kr.or.ddit.club.vo.ClubVO"> 

SELECT B.*
      FROM(
          SELECT ROWNUM RNUM, A.*
          FROM(
            SELECT CLUB_CD, CLUB_NM, CLUB_DETAIL, CLUB_FIC_FILE
			FROM CLUB  
				WHERE CLUB_STATUS = '승인'
          ) A
      ) B
<![CDATA[
      WHERE RNUM >= #{startRow} AND RNUM <=#{endRow}
]]>
</select>

<select id="clubDetail" parameterType="String" resultType="kr.or.ddit.club.vo.ClubVO">
SELECT C.CLUB_CD, C.PR_CD, C.ST_CD, C.CLUB_STAT, C.CLUB_CLOSED, C.CLUB_DETAIL, C.CLUB_FIC_FILE
, C.CLUB_NM, C.CLUB_PLAN, C.CLUB_APP_DATE, C.CLUB_STATUS, C.CLUB_REFUSE, S.ST_NM AS "STUDENTVO.stNm"
, P.PR_NM AS "PROFESSORVO.prNm"
FROM CLUB C 
INNER JOIN student S ON C.ST_CD = S.ST_CD 
INNER JOIN professor P ON C.PR_CD = P.PR_CD 
WHERE C.CLUB_STATUS = '승인' AND (C.Club_Cd=#{clubCd})
</select>

<select id="clubTotalRecord" resultType="long" parameterType="kr.or.ddit.common.vo.PaginationInfo">
      SELECT COUNT(*)
      FROM CLUB
      <include refid="searchFrag"></include>
   </select>



<select id="proChoice"  parameterType="kr.or.ddit.common.vo.PaginationInfo" resultType="kr.or.ddit.professor.vo.ProfessorVO">
    
    <include refid="pro_info"></include>
    
   SELECT B.*
      FROM(
          SELECT ROWNUM RNUM, A.* FROM(
       SELECT    
           P.PR_CD,
            DT_CD,
            PR_NM,
            PR_PH,
            PR_EMAIL,
            PR_PASS,
            PR_PIC,
            PR_ROLE,
            PR_STATUS,
            PR_ADDR1,
            PR_ADDR2,
            PR_REG1,
            PR_REG2
            , COLGE_CD
            , P.ATCH_FILE_ID
            , DT_NM 
            , DT_ONNER_NM
            , DT_ADDR
            , DT_PH
            , DT_EST
            , DT_STAT
            , DT_URL
        FROM
            PRO_INFO P
        LEFT JOIN
            CLUB C ON P.PR_CD = C.PR_CD
        WHERE
            C.CLUB_STATUS IS NULL OR C.CLUB_STATUS NOT IN ('확인', '승인')
           
        ORDER BY P.PR_CD ASC
          ) A 
      ) B
<![CDATA[
      WHERE RNUM >= #{startRow} AND RNUM <=#{endRow}
]]> <if test="simpleCondition neq null and simpleCondition.searchWord neq null and not simpleCondition.searchWord.isEmpty()">
            AND <include refid="searchFrag2"></include>
        	</if>
</select>

<select id="profTotalRecord" resultType="long" parameterType="kr.or.ddit.common.vo.PaginationInfo">
     <include refid="pro_info"></include>
      SELECT COUNT(*)
      FROM 
      (
   SELECT B.*
      FROM(
          SELECT ROWNUM RNUM, A.* FROM(
       SELECT    
           P.PR_CD,
            DT_CD,
            PR_NM,
            PR_PH,
            PR_EMAIL,
            PR_PASS,
            PR_PIC,
            PR_ROLE,
            PR_STATUS,
            PR_ADDR1,
            PR_ADDR2,
            PR_REG1,
            PR_REG2
            , COLGE_CD
            , P.ATCH_FILE_ID
            , DT_NM 
            , DT_ONNER_NM
            , DT_ADDR
            , DT_PH
            , DT_EST
            , DT_STAT
            , DT_URL
        FROM
            PRO_INFO P
        LEFT JOIN
            CLUB C ON P.PR_CD = C.PR_CD
        WHERE
            C.CLUB_STATUS IS NULL OR C.CLUB_STATUS NOT IN ('확인', '승인')
           
        ORDER BY P.PR_CD ASC
          ) A 
      ) B
<if test="simpleCondition neq null and simpleCondition.searchWord neq null and not simpleCondition.searchWord.isEmpty()">
            WHERE <include refid="searchFrag2"></include>
        	</if>
        	)
</select>


<update id="clubUpdate" parameterType="kr.or.ddit.club.vo.ClubVO">
UPDATE CLUB SET
    CLUB_NM=#{clubNm},          
    CLUB_PLAN=#{clubPlan},       
    CLUB_DETAIL=#{clubDetail},   
    CLUB_FIC_FILE=#{clubFicFile} 
WHERE CLUB_CD=#{clubCd} 
</update>

<update id="insertApproval" parameterType="String">
UPDATE CLUB SET CLUB_STATUS=#{param2}
WHERE CLUB_CD=#{param1}
</update>

<update id="insertRefuse" parameterType="kr.or.ddit.club.vo.ClubVO">
UPDATE CLUB SET CLUB_STATUS = #{clubStatus}, CLUB_REFUSE = #{clubRefuse}
WHERE CLUB_CD=#{clubCd}
</update>



</mapper>
