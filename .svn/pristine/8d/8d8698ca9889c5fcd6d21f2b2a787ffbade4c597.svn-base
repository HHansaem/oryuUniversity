<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.lecture.dao.LectureDAO">

	<sql id="searchFrag">
		<where>
			<if test="simpleCondition neq null and simpleCondition.searchWord neq null and not simpleCondition.searchWord.isEmpty">
				<choose>
					<when test="simpleCondition.searchType eq 'lCode'">
						INSTR(LI.LEC_CD, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'lName'">
						INSTR(LI.LEC_LECT_TITLE, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'sCode'">
						INSTR(LI.SUBJ_CD, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'sName'">
						INSTR(LI.SUBJ_NM, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'pName'">
						INSTR(LI.PR_NM, #{simpleCondition.searchWord}) > 0
					</when>
					<otherwise>
						INSTR(LI.LEC_CD, #{simpleCondition.searchWord}) > 0
						OR
						INSTR(LI.LEC_LECT_TITLE, #{simpleCondition.searchWord}) > 0
						OR
						INSTR(LI.SUBJ_CD, #{simpleCondition.searchWord}) > 0
						OR
						INSTR(LI.SUBJ_NM, #{simpleCondition.searchWord}) > 0
						OR
						INSTR(LI.PR_NM, #{simpleCondition.searchWord}) > 0
					</otherwise>
				</choose>
			</if>
			<if test="detailCondition neq null">
				<choose>
			        <when test="detailCondition.STAND neq null and not detailCondition.STAND.isEmpty">
			            AND LI.LEC_STAT != '4' AND LI.LEC_STAT != '5'
			        </when>
			        <otherwise>
			        </otherwise>
			    </choose>
			    <choose>
			        <when test="detailCondition.REQ neq null and not detailCondition.REQ.isEmpty">
			            AND LI.LEC_STAT != '3' AND LI.LEC_STAT != '2' AND LI.LEC_STAT != '1'
			        </when>
			        <otherwise>
			        </otherwise>
			    </choose>
				<choose>
			        <when test="detailCondition.prCd neq null and not detailCondition.prCd.isEmpty">
			            AND  LI.PR_CD= #{detailCondition.prCd}
			        </when>
			        <otherwise>
			        </otherwise>
			    </choose>
				<choose>
			        <when test="detailCondition.lecStat neq null and not detailCondition.lecStat.isEmpty">
			            AND LI.LEC_STAT = #{detailCondition.lecStat}
			        </when>
			        <otherwise>
			        </otherwise>
			    </choose>
			    <choose>
			        <when test="detailCondition.dtCd neq null and not detailCondition.dtCd.isEmpty">
			            AND LI.DT_CD = #{detailCondition.dtCd}
			        </when>
			        <otherwise>
			        </otherwise>
			    </choose>
			    <choose>
			        <when test="detailCondition.classfication neq null and not detailCondition.classfication.isEmpty">
			            AND LI.SUBJ_COM_TYPE = #{detailCondition.classfication}
			        </when>
			        <otherwise>
			        </otherwise>
			    </choose>
			     <choose>
			        <when test="detailCondition.grade neq null and not detailCondition.grade.isEmpty">
			            AND LI.LEC_GRA_CD = #{detailCondition.grade}
			        </when>
			        <otherwise>
			        </otherwise>
			    </choose>
			     <choose>
			        <when test="detailCondition.semester neq null and not detailCondition.semester.isEmpty">
			            AND LI.LEC_SEME_CD = #{detailCondition.semester}
			        </when>
			        <otherwise>
			        </otherwise>
			    </choose>
			</if>
		</where>
	</sql>
	
	<sql id="frag">
		<where>
			<if test="detailCondition neq null">
			    <choose>
			        <when test="detailCondition.college neq null and not detailCondition.college.isEmpty">
			            AND D.COLGE_CD = #{detailCondition.college}
			        </when>
			    </choose>
			</if>
		</where>
	</sql>
	
	<resultMap type="kr.or.ddit.lecture.vo.LectureVO" id="lectureMap" autoMapping="true">
		<id property="lecCd" column="LEC_CD"/>
		
		<association property="professor" javaType="kr.or.ddit.professor.vo.ProfessorVO" autoMapping="true">
			<id property="prCd" column="PR_CD"/>
			<result property="prNm" column="PR_NM"/>
		</association>
		
		<association property="subject" javaType="kr.or.ddit.subject.vo.SubjectVO" autoMapping="true">
			<id property="subjCd" column="SUBJ_CD"/>
			<result property="subjNm" column="SUBJ_NM"/>
		</association>
		
		<association property="fileGroup" javaType="kr.or.ddit.atch.vo.AtchFileVO">
		   <id property="atchFileId" column="ATCH_FILE_ID"/>
		   <result property="creatDt" column="CREAT_DT"/>
		   <result property="useAt" column="USE_AT"/>
		   <collection property="detailList" ofType="kr.or.ddit.atch.vo.AtchFileDetailVO" autoMapping="true">
		      <id property="atchFileId" column="ATCH_FILE_ID"/>
		      <id property="fileSn" column="FILE_SN"/>
		   </collection>
		</association>
		
	</resultMap>

	<select id="selectLectureList" resultMap="lectureMap" parameterType="kr.or.ddit.common.vo.PaginationInfo">
		WITH ATCH_FILE_VIEW AS (
		    SELECT *
		    FROM ATCH_FILE
		    INNER JOIN ATCH_FILE_DETAIL USING (ATCH_FILE_ID)
		),
		LECTURE_INFO AS (
		    SELECT 
		        L.LEC_CD,
		        L.SUBJ_CD,
		        L.PR_CD,
		        L.LEC_LECT_TITLE,
		        L.LEC_GRA_CD,
		        L.LEC_SEME_CD,
		        L.LEC_LECT_CRED,
		        L.LEC_ENRO_LIMIT,
		        L.LEC_LECT_DIVISION,
		        L.LEC_STAT,
		        L.GR_MID,
		        L.GR_FINAL,
		        L.GR_ATTEND,
		        L.GR_ASSI,
		        P.PR_NM,
		        S.SUBJ_NM,
		        S.DT_CD,
		        S.SUBJ_COM_TYPE,
		        AF.ATCH_FILE_ID,
		        AF.FILE_SN,
		        AF.FILE_STRE_COURS,
		        AF.STRE_FILE_NM,
		        AF.ORIGNL_FILE_NM,
		        AF.FILE_EXTSN,
		        AF.FILE_SIZE,
		        AF.FILE_MIME
		    FROM LECTURE L
		    LEFT JOIN PROFESSOR P ON L.PR_CD = P.PR_CD
		    LEFT JOIN ATCH_FILE_VIEW AF ON L.ATCH_FILE_ID = AF.ATCH_FILE_ID
		    LEFT JOIN SUBJECT S ON L.SUBJ_CD = S.SUBJ_CD
		),
		ENROLLMENT_INFO AS (
		    SELECT LEC_CD, COUNT(*) AS ENROLL
		    FROM ENROLLMENT
		    GROUP BY LEC_CD
		),
		LECTURE_SCHEDULES AS (
		    SELECT LEC_CD, SCHE_CD, CLAS_CD
		    FROM LECTURESCHEDULE
		),
		COMBINED AS (
		    SELECT
		        LI.LEC_CD,
		        LI.SUBJ_CD,
		        LI.PR_CD,
		        LI.LEC_LECT_TITLE,
		        LI.LEC_GRA_CD,
		        LI.LEC_SEME_CD,
		        LI.LEC_LECT_CRED,
		        LI.LEC_ENRO_LIMIT,
		        LI.LEC_LECT_DIVISION,
		        LI.LEC_STAT,
		        LI.GR_MID,
		        LI.GR_FINAL,
		        LI.GR_ATTEND,
		        LI.GR_ASSI,
		        LI.PR_NM,
		        LI.SUBJ_NM,
		        LI.DT_CD,
		        LI.SUBJ_COM_TYPE,
		        LI.ATCH_FILE_ID,
		        LI.FILE_SN,
		        LI.FILE_STRE_COURS,
		        LI.STRE_FILE_NM,
		        LI.ORIGNL_FILE_NM,
		        LI.FILE_EXTSN,
		        LI.FILE_SIZE,
		        LI.FILE_MIME,
		        COALESCE(EI.ENROLL, 0) AS ENROLL,
		        LISTAGG(LS.SCHE_CD, ', ') WITHIN GROUP (ORDER BY LS.SCHE_CD) AS SCHE_CDS,
		        LS.CLAS_CD
		    FROM LECTURE_INFO LI
		    LEFT JOIN ENROLLMENT_INFO EI ON LI.LEC_CD = EI.LEC_CD
		    LEFT JOIN LECTURE_SCHEDULES LS ON LI.LEC_CD = LS.LEC_CD
			<include refid="searchFrag"/>
		    GROUP BY
		        LI.LEC_CD,
		        LI.SUBJ_CD,
		        LI.PR_CD,
		        LI.LEC_LECT_TITLE,
		        LI.LEC_GRA_CD,
		        LI.LEC_SEME_CD,
		        LI.LEC_LECT_CRED,
		        LI.LEC_ENRO_LIMIT,
		        LI.LEC_LECT_DIVISION,
		        LI.LEC_STAT,
		        LI.GR_MID,
		        LI.GR_FINAL,
		        LI.GR_ATTEND,
		        LI.GR_ASSI,
		        LI.PR_NM,
		        LI.SUBJ_NM,
		        LI.DT_CD,
		        LI.SUBJ_COM_TYPE,
		        LI.ATCH_FILE_ID,
		        LI.FILE_SN,
		        LI.FILE_STRE_COURS,
		        LI.STRE_FILE_NM,
		        LI.ORIGNL_FILE_NM,
		        LI.FILE_EXTSN,
		        LI.FILE_SIZE,
		        LI.FILE_MIME,
		        EI.ENROLL,
		        LS.CLAS_CD
		)
		SELECT A.*,D.COLGE_CD
		FROM (
		    SELECT C.*, ROWNUM RNUM 
		    FROM (
		        SELECT *
		        FROM COMBINED
		        
		        ORDER BY LEC_STAT, TO_NUMBER(LEC_CD) DESC
		    ) C
		) A
		LEFT JOIN SUBJECT S ON A.SUBJ_CD = S.SUBJ_CD
		LEFT JOIN DEPARTMENT D ON S.DT_CD = D.DT_CD
		<choose>
    		<when test="detailCondition != null and detailCondition.department != null and not detailCondition.department.isEmpty()">
    		WHERE D.COLGE_CD = #{detailCondition.college}
		        <![CDATA[
		        AND RNUM >= #{startRow} AND RNUM <= #{endRow}
		        ]]>
    		</when>
		    <otherwise>
		        <![CDATA[
		        WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
		        ]]>
		    </otherwise>
		</choose>
	</select>

	<select id="selectTotalRecord" resultType="long" parameterType="kr.or.ddit.common.vo.PaginationInfo">
    	WITH ATCH_FILE_VIEW AS (
	    SELECT *
	    FROM ATCH_FILE
	    INNER JOIN ATCH_FILE_DETAIL USING (ATCH_FILE_ID)
		),
		LECTURE_INFO AS (
		    SELECT 
		        L.LEC_CD,
		        L.SUBJ_CD,
		        L.PR_CD,
		        L.LEC_LECT_TITLE,
		        L.LEC_GRA_CD,
		        L.LEC_SEME_CD,
		        L.LEC_LECT_CRED,
		        L.LEC_ENRO_LIMIT,
		        L.LEC_LECT_DIVISION,
		        L.LEC_STAT,
		        L.GR_MID,
		        L.GR_FINAL,
		        L.GR_ATTEND,
		        L.GR_ASSI,
		        P.PR_NM,
		        S.SUBJ_NM,
		        S.DT_CD,
		        S.SUBJ_COM_TYPE,
		        AF.ATCH_FILE_ID,
		        AF.FILE_SN,
		        AF.FILE_STRE_COURS,
		        AF.STRE_FILE_NM,
		        AF.ORIGNL_FILE_NM,
		        AF.FILE_EXTSN,
		        AF.FILE_SIZE,
		        AF.FILE_MIME
		    FROM LECTURE L
		    LEFT JOIN PROFESSOR P ON L.PR_CD = P.PR_CD
		    LEFT JOIN ATCH_FILE_VIEW AF ON L.ATCH_FILE_ID = AF.ATCH_FILE_ID
		    LEFT JOIN SUBJECT S ON L.SUBJ_CD = S.SUBJ_CD
		),
		ENROLLMENT_INFO AS (
		    SELECT LEC_CD, COUNT(*) AS ENROLL
		    FROM ENROLLMENT
		    GROUP BY LEC_CD
		),
		LECTURE_SCHEDULES AS (
		    SELECT LEC_CD, SCHE_CD, CLAS_CD
		    FROM LECTURESCHEDULE
		),
		COMBINED AS (
		    SELECT
		        LI.LEC_CD,
		        LI.SUBJ_CD,
		        LI.PR_CD,
		        LI.LEC_LECT_TITLE,
		        LI.LEC_GRA_CD,
		        LI.LEC_SEME_CD,
		        LI.LEC_LECT_CRED,
		        LI.LEC_ENRO_LIMIT,
		        LI.LEC_LECT_DIVISION,
		        LI.LEC_STAT,
		        LI.GR_MID,
		        LI.GR_FINAL,
		        LI.GR_ATTEND,
		        LI.GR_ASSI,
		        LI.PR_NM,
		        LI.SUBJ_NM,
		        LI.DT_CD,
		        LI.SUBJ_COM_TYPE,
		        LI.ATCH_FILE_ID,
		        LI.FILE_SN,
		        LI.FILE_STRE_COURS,
		        LI.STRE_FILE_NM,
		        LI.ORIGNL_FILE_NM,
		        LI.FILE_EXTSN,
		        LI.FILE_SIZE,
		        LI.FILE_MIME,
		        COALESCE(EI.ENROLL, 0) AS ENROLL,
		        LISTAGG(LS.SCHE_CD, ', ') WITHIN GROUP (ORDER BY LS.SCHE_CD) AS SCHE_CDS,
		        LS.CLAS_CD
		    FROM LECTURE_INFO LI
		    LEFT JOIN ENROLLMENT_INFO EI ON LI.LEC_CD = EI.LEC_CD
		    LEFT JOIN LECTURE_SCHEDULES LS ON LI.LEC_CD = LS.LEC_CD
			<include refid="searchFrag"/>
		    GROUP BY
		        LI.LEC_CD,
		        LI.SUBJ_CD,
		        LI.PR_CD,
		        LI.LEC_LECT_TITLE,
		        LI.LEC_GRA_CD,
		        LI.LEC_SEME_CD,
		        LI.LEC_LECT_CRED,
		        LI.LEC_ENRO_LIMIT,
		        LI.LEC_LECT_DIVISION,
		        LI.LEC_STAT,
		        LI.GR_MID,
		        LI.GR_FINAL,
		        LI.GR_ATTEND,
		        LI.GR_ASSI,
		        LI.PR_NM,
		        LI.SUBJ_NM,
		        LI.DT_CD,
		        LI.SUBJ_COM_TYPE,
		        LI.ATCH_FILE_ID,
		        LI.FILE_SN,
		        LI.FILE_STRE_COURS,
		        LI.STRE_FILE_NM,
		        LI.ORIGNL_FILE_NM,
		        LI.FILE_EXTSN,
		        LI.FILE_SIZE,
		        LI.FILE_MIME,
		        EI.ENROLL,
		        LS.CLAS_CD
		)
		SELECT COUNT(*) AS CNT
		FROM (
		    SELECT C.*, ROWNUM RNUM 
		    FROM (
		        SELECT *
		        FROM COMBINED
		        
		        ORDER BY LEC_STAT,TO_NUMBER(LEC_CD) DESC
		    ) C
		) A
		LEFT JOIN SUBJECT S ON A.SUBJ_CD = S.SUBJ_CD
		LEFT JOIN DEPARTMENT D ON S.DT_CD = D.DT_CD
		<include refid="frag"/>
	</select>
	
	<select id="selectLecture" resultType="kr.or.ddit.lecture.vo.LectureVO" parameterType="String">
		SELECT *
		FROM LECTURE
		WHERE LEC_CD = #{lecCd}
	</select>

	
	<select id="selectLectureSchedule" resultType="kr.or.ddit.lecture.vo.LectureVO" parameterType="String">
		SELECT
		    L.*,
		    LS.CLAS_CD,
		    LISTAGG(LS.SCHE_CD, ', ') WITHIN GROUP (ORDER BY LS.SCHE_CD) AS SCHE_CDS
		FROM LECTURE L
		INNER JOIN LECTURESCHEDULE LS ON L.LEC_CD = LS.LEC_CD
		WHERE L.LEC_CD = #{lecCd}
		GROUP BY
		    L.LEC_CD,
		    L.SUBJ_CD,
		    L.PR_CD,
		    L.LEC_LECT_TITLE,
		    L.LEC_GRA_CD,
		    L.LEC_SEME_CD,
		    L.LEC_LECT_CRED,
		    L.LEC_ENRO_LIMIT,
		    L.LEC_LECT_DIVISION,
		    L.LEC_STAT,
		    L.GR_MID,
		    L.GR_FINAL,
		    L.GR_ATTEND,
		    L.GR_ASSI,
		    L.ATCH_FILE_ID,
		    LS.CLAS_CD
	</select>
	
	<insert id="insertLecture" parameterType="kr.or.ddit.lecture.vo.LectureVO">
		<selectKey order="BEFORE" resultType="String" keyProperty="lecCd">
			SELECT LECTURE_SEQ.NEXTVAL FROM DUAL
		</selectKey>
			INSERT INTO lecture (
			    LEC_CD,
			    SUBJ_CD,
			    PR_CD,
			    LEC_LECT_TITLE,
			    LEC_GRA_CD,
			    LEC_SEME_CD,
			    LEC_LECT_CRED,
			    LEC_ENRO_LIMIT,
			    LEC_LECT_DIVISION,
			    LEC_STAT,
			    GR_MID,
			    GR_FINAL,
			    GR_ATTEND,
			    GR_ASSI,
			    ATCH_FILE_ID
			) VALUES (
			    #{lecCd,jdbcType=VARCHAR}
				, #{subjCd,jdbcType=VARCHAR}
				, #{prCd,jdbcType=VARCHAR}
				, #{lecLectTitle,jdbcType=VARCHAR}
				, #{lecGraCd,jdbcType=VARCHAR}
				, #{lecSemeCd,jdbcType=VARCHAR}
				, #{lecLectCred,jdbcType=VARCHAR}
				, #{lecEnroLimit,jdbcType=VARCHAR}
				, #{lecLectDivision,jdbcType=VARCHAR}
				, '3'
				, #{grMid,jdbcType=NUMERIC}
				, #{grFinal,jdbcType=NUMERIC}
				, #{grAttend,jdbcType=NUMERIC}
				, #{grAssi,jdbcType=NUMERIC}
				, #{atchFileId,jdbcType=NUMERIC}
			)
	</insert>
	
	<update id="updateLecture" parameterType="kr.or.ddit.lecture.vo.LectureVO">
		UPDATE LECTURE
		SET
			SUBJ_CD = #{subjCd, jdbcType=VARCHAR}
			, PR_CD = #{prCd, jdbcType=VARCHAR}
			, LEC_LECT_TITLE = #{lecLectTitle, jdbcType=VARCHAR}
			, LEC_GRA_CD = #{lecGraCd, jdbcType=VARCHAR}
			, LEC_SEME_CD = #{lecSemeCd, jdbcType=VARCHAR}
			, LEC_LECT_CRED = #{lecLectCred, jdbcType=VARCHAR}
			, LEC_ENRO_LIMIT = #{lecEnroLimit, jdbcType=VARCHAR}
			, LEC_LECT_DIVISION = #{lecLectDivision, jdbcType=VARCHAR}
			, ATCH_FILE_ID = #{atchFileId, jdbcType=NUMERIC}
			, GR_MID = #{grMid, jdbcType=NUMERIC}
			, GR_FINAL = #{grFinal, jdbcType=NUMERIC}
			, GR_ATTEND = #{grAttend, jdbcType=NUMERIC}
			, GR_ASSI = #{grAssi, jdbcType=NUMERIC}
		WHERE
		    LEC_CD = #{lecCd, jdbcType=VARCHAR}
	</update>
	
	<insert id="requestLecture" parameterType="kr.or.ddit.lecture.vo.LectureVO">
		<selectKey order="BEFORE" resultType="String" keyProperty="lecCd">
			SELECT LECTURE_SEQ.NEXTVAL FROM DUAL
		</selectKey>
			INSERT INTO lecture (
			    LEC_CD,
			    SUBJ_CD,
			    PR_CD,
			    LEC_LECT_TITLE,
			    LEC_GRA_CD,
			    LEC_SEME_CD,
			    LEC_LECT_CRED,
			    LEC_ENRO_LIMIT,
			    LEC_LECT_DIVISION,
			    LEC_STAT,
			    GR_MID,
			    GR_FINAL,
			    GR_ATTEND,
			    GR_ASSI,
			    ATCH_FILE_ID
			) VALUES (
			    #{lecCd,jdbcType=VARCHAR}
				, #{subjCd,jdbcType=VARCHAR}
				, #{prCd,jdbcType=VARCHAR}
				, #{lecLectTitle,jdbcType=VARCHAR}
				, #{lecGraCd,jdbcType=VARCHAR}
				, #{lecSemeCd,jdbcType=VARCHAR}
				, #{lecLectCred,jdbcType=VARCHAR}
				, #{lecEnroLimit,jdbcType=VARCHAR}
				, #{lecLectDivision,jdbcType=VARCHAR}
				, '4'
				, #{grMid,jdbcType=NUMERIC}
				, #{grFinal,jdbcType=NUMERIC}
				, #{grAttend,jdbcType=NUMERIC}
				, #{grAssi,jdbcType=NUMERIC}
				, #{atchFileId,jdbcType=NUMERIC}
			)
	
	</insert>
	
	<update id="responseLecture" parameterType="kr.or.ddit.lecture.vo.LectureVO">
		UPDATE LECTURE
		SET
			LEC_STAT = '3'
		WHERE LEC_CD = #{lecCd}
	</update>
	
	<update id="refuseLecture" parameterType="kr.or.ddit.lecture.vo.LectureVO">
		UPDATE LECTURE
		SET
			LEC_STAT = '5'
		WHERE LEC_CD = #{lecCd}
	</update>
	
	<update id="commitEnrollment" parameterType="kr.or.ddit.lecture.vo.LectureVO">
		UPDATE LECTURE
		SET
			LEC_STAT = '1'
		WHERE LEC_CD = #{lecCd}
	</update>
	
	<update id="standEnrollment" parameterType="kr.or.ddit.lecture.vo.LectureVO">
		UPDATE LECTURE
		SET
			LEC_STAT = '2'
		WHERE LEC_CD = #{lecCd}
	</update>
	
	<select id="selectCurrentLectureList" parameterType="string" resultType="kr.or.ddit.lecture.vo.LectureVO">
		SELECT
		    lec_cd,subj_cd,pr_cd,
		    lec_lect_title,lec_gra_cd,lec_seme_cd,
		    lec_lect_cred,lec_enro_limit,lec_lect_division,
		    lec_stat,gr_mid,gr_final,
		    gr_attend,gr_assi,atch_file_id
		FROM lecture WHERE pr_cd = #{prCd} and LEC_SEME_CD = '1'
	</select>
	
	<resultMap type="kr.or.ddit.lecture.vo.LectureVO" id="lectureMapDetail" autoMapping="true">
		<id property="lecCd" column="LEC_CD"/>
		<association property="professor" javaType="kr.or.ddit.professor.vo.ProfessorVO" autoMapping="true">
			<association property="department" javaType="kr.or.ddit.department.vo.DepartmentVO" autoMapping="true">
				<association property="college" javaType="kr.or.ddit.college.vo.CollegeVO" autoMapping="true"/>
			</association>
		</association>
		<association property="fileGroup"
			javaType="kr.or.ddit.atch.vo.AtchFileVO">
			<id property="atchFileId" column="ATCH_FILE_ID" />
			<result property="creatDt" column="CREAT_DT" />
			<result property="useAt" column="USE_AT" />
			<collection property="detailList"
				ofType="kr.or.ddit.atch.vo.AtchFileDetailVO" autoMapping="true">
				<id property="atchFileId" column="ATCH_FILE_ID" />
				<id property="fileSn" column="FILE_SN" />
			</collection>
		</association>
		<collection property="lectureScheduleList" ofType="kr.or.ddit.lectureSchedule.vo.LectureScheduleVO" autoMapping="true">
			<id property="clasCd" column="CLAS_CD"/>
			<id property="scheCd" column="SCHE_CD"/>
			<association property="classroom" autoMapping="true" javaType="kr.or.ddit.common.vo.ClassRoomVO"/>
			<association property="dayTimeSchedule" autoMapping="true" javaType="kr.or.ddit.common.vo.DaytimeScheduleVO"/>
		</collection>
	</resultMap>
	
	<select id="selectLectureDetail" parameterType="string" resultMap="lectureMapDetail">

		with DEPARTMENTVIEW AS (
		SELECT
		    dt_cd, d.colge_cd
		    , colge_nm, dt_nm
		FROM
		    department d INNER JOIN COLLEGE c on (d.COLGE_CD = c.COLGE_CD)
		), LECTUREVIEW AS(
		 SELECT
		    lec_cd, subj_cd, l.pr_cd, dt_cd, pr_nm
		  , lec_lect_title, lec_gra_cd, lec_seme_cd
		  , lec_lect_cred, lec_enro_limit, lec_lect_division
		  , lec_stat, gr_mid, gr_final
		  , gr_attend, gr_assi, atch_file_id, pr_ph
		FROM
		    lecture l INNER JOIN PROFESSOR p on (l.pr_cd = p.pr_cd)
		), LECTURESCHEDULEVIEW AS(
		SELECT
		    CLAS_NM, SCHE_DAY,SCHE_TIME, LEC_CD, ls.SCHE_CD
		    FROM LECTURESCHEDULE ls INNER JOIN DAYTIMESCHEDULE ds ON (ls.SCHE_CD = ds.SCHE_CD)
		                            INNER JOIN CLASSROOM c ON (ls.CLAS_CD = c.CLAS_CD)
		), ATCH_FILE_VIEW AS(
			SELECT *
			FROM ATCH_FILE INNER JOIN ATCH_FILE_DETAIL USING (atch_file_id)
		)
		SELECT dv.*, lv.*, lvs.*, afv.*
		FROM LECTUREVIEW lv INNER JOIN DEPARTMENTVIEW dv ON (dv.dt_cd = lv.dt_cd)
		                    LEFT OUTER JOIN LECTURESCHEDULEVIEW lvs ON (lv.lec_cd = lvs.lec_cd)
		                    LEFT OUTER JOIN ATCH_FILE_VIEW afv ON (afv.atch_file_id = lv.atch_file_id)
		WHERE lv.lec_cd = #{lecCd}
	</select>
	
	
</mapper>