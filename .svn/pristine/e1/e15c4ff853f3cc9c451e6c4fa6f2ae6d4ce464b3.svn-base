<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<script src='<%=request.getContextPath()%>/resources/fullcalendar-6.1.8/dist/index.global.js'></script>
<style>
  #calendar {
/*     width: 50%; */
/*    	margin: 0 auto; */
	flex: 1;
    padding: 0;
    font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
    font-size: 14px;
  }
  
	#listView {
	width: 40%;
	height: auto;
	border: 1px solid silver;
	}
  
  .calendar-container {
    width: 95%;
    display: flex;
	justify-content: space-between;
	margin-left: 25px;
  	}

	.list-view {
    flex: 0.25;
    margin-left: 20px;
  	}
	
  .event-set {
    display: flex;
    flex-direction: column;
    padding: 10px 0;
/*     border-top: 1px solid #ccc; */
  }

  .event-title {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    padding-left: 15px;
  }

  .distinction-circle {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    margin-right: 5px;
  }

  .event-title span {
    font-weight: bold;
  }

  .event-date {
    font-size: 12px;
    color: #666;
    margin-left: 15px;
    margin-bottom: 10px;
  }

  .separator {
	border: none;
    border-top: 1px solid #666;
    margin: 10px 25px 3px 25px;
  }
  
  .list-title {
	  font-size: 20px;
	  font-weight: bold;
	  margin-bottom: 10px;
	  padding: 20px;
	  border-bottom: 1px solid #ccc;
	}
</style>

<!-- 모달창 -->
<!-- <button type="button" class="btn btn-outline-light" data-toggle="modal" data-target="#exampleModal">일정 추가</button> -->

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">일정 정보</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="modalForm">
          <input type="hidden" id="asCd" name="asCd">
          <div class="form-group">
            <label for="asDistinction">구분</label>
            <input type="text" class="form-control" id="asDistinction" name="asDistinction">
          </div>
          <div class="form-group">
            <label for="asNm">일정명</label>
            <input type="text" class="form-control" id="asNm" name="asNm">
          </div>
          <div class="form-group">
            <label for="asStart">시작일시</label>
            <input type="date" class="form-control" id="asStart" name="asStart">
          </div>
          <div class="form-group">
            <label for="asEnd">종료일시</label>
            <input type="date" class="form-control" id="asEnd" name="asEnd">
          </div>
          <div class="form-group">
            <label for="asCont">메모</label>
            <input type="text" class="form-control" id="asCont" name="asCont">
          </div>
          <div class="form-group">
            <label for="asAccePerm">열람권한</label>
            <input type="text" class="form-control" id="asAccePerm" name="asAccePerm">
          </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-primary">저장</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">취소</button>
        </form>
      </div>
    </div>
  </div>
</div>
 
<div class="calendar-container">
  <div id="calendar" class="calendar"></div>
   <div id="listView" class="list-view">
   	<div class="list-title"><i class="mdi mdi-calendar-check"></i>Schedule List</div>
   </div>
</div>

<script>
//   '구분'에 따라 색깔 다르게 지정
  function getColorForDistinction(asDistinction) {
    if (asDistinction === '등록/장학일정') {
      return '#FFA500';
    } else if (asDistinction === '졸업일정') {
      return '#32CD32'; 
    } else if (asDistinction === '학적일정') {
      return '#32CD32';
    } else if (asDistinction === '수업일정') {
      return '#32CD32';
    } else if (asDistinction === '행사일정') {
      return '#FFA500';
    } else if (asDistinction === '학술사업일정') {
      return '#32CD32';
    } else if (asDistinction === '수강신청일정') {
//       return '#FFF0F5';
		 return '#32CD32';
    } else {
//       return '#E6E6FA'; 
		 return '#FFA500';
    }
  }


  function getEventSources() {
     return {
       url: "<c:url value='/schedule/acaCalendarDS.do'/>",
//        textColor: 'black',
//        color: 'pink', // 기본 배경색
       success: function (data) {
         for (var i = 0; i < data.length; i++) {
           var asDistinction = data[i].asDistinction;
           data[i].backgroundColor = getColorForDistinction(asDistinction);
         }
       }
     };
   }

  document.addEventListener('DOMContentLoaded', function() {
    var calendarEl = document.getElementById('calendar');
    var startDateField  = document.getElementById('asStart');
    var endDateField  = document.getElementById('asEnd');
    var listMonthEl = document.getElementById('listMonth');
    
    var calendar = new FullCalendar.Calendar(calendarEl, {
      initialView : 'dayGridMonth',
      locale : 'ko',
      headerToolbar : {
        start : "prev next",
        center : "title",
        end : 'insertButton'
      },
      customButtons: {
	   	  insertButton: {
	   	      text: '일정 추가',
	   	      click: function () {
	   	        $('#exampleModal').modal('show');
	   	      }
	   	    }
	   	  },
      
      selectable : true, // 달력 일자 드래그 설정
      droppable : true,
      editable : true,
      dayMaxEvents: true, // 이벤트 오버 -> 높이 제한
      displayEventTime: false, // 시간 안 보이게
      eventSources : getEventSources(),
      
      select : function(info){
    	  
    	  var clickedEventEndDate = info.endStr;
    	  const date = new Date(clickedEventEndDate);
    	  const oneDayMilliseconds = 24 * 60 * 60 * 1000;
    	  const previousDate = new Date(date.getTime() - oneDayMilliseconds);
    	  
    	  const formattedDate = previousDate.toLocalDateString('en-CA');
    	  
    	  startDateField.value = info.startStr;
    	  endDateField.value = formattedDate;
    	  
    	  $('#exampleModal').modal('show');
      }
    });
    

    calendar.render();
//     listMonth.render();
    
// 서버에서 데이터 가져와서 출력
$.ajax({
    type: 'GET',
    url: '<c:url value="/schedule/acaCalendarDS.do"/>',
    dataType: 'json',
    success: function(data) {
        var listView = document.getElementById('listView');
        for (var i = 0; i < data.length; i++) {
            var event = data[i];
            var asDistinction = event.asDistinction;
            var eventTitle = event.title;
            var startDate = new Date(event.start);
            var endDate = new Date(event.end);
            
            // YYYY-MM-DD
            var formattedStartDate = startDate.toISOString().split('T')[0];
            var formattedEndDate = endDate.toISOString().split('T')[0];
            
            // 일정 세트
            var eventSetElement = document.createElement('div');
            eventSetElement.classList.add('event-set');

            // 일정 제목
            var eventTitleElement = document.createElement('div');
            eventTitleElement.classList.add('event-title');

            // 구분 동그라미
            var distinctionCircle = document.createElement('div');
            distinctionCircle.classList.add('distinction-circle');
            distinctionCircle.style.backgroundColor = getColorForDistinction(asDistinction);
            eventTitleElement.appendChild(distinctionCircle);

            var eventTitleText = document.createElement('span');
            eventTitleText.innerText = eventTitle;
            eventTitleElement.appendChild(eventTitleText);

            eventSetElement.appendChild(eventTitleElement);
            
            // 날짜
            var eventDateElement = document.createElement('div');
            eventDateElement.classList.add('event-date');
            eventDateElement.innerText = formattedStartDate + ' ~ ' + formattedEndDate;
            eventSetElement.appendChild(eventDateElement);
            
            // 구분선
            var separatorElement = document.createElement('hr'); 
            separatorElement.classList.add('separator');
            eventSetElement.appendChild(separatorElement);

            // 일정 세트 -> listView에 추가
            listView.appendChild(eventSetElement);
        }
    },
    error: function(xhr, status, error) {
        console.error('Error fetching events:', error);
    }
});

//모달 닫힐 때 입력 필드 값을 초기화
$('#exampleModal').on('hidden.bs.modal', function(){
	$('#asCd').val('');
	$('#asDistinction').val('');
	$('#asNm').val('');
	$('#asStart').val('');
	$('#asEnd').val('');
	$('#asCont').val('');
	$('#asAccePerm').val('');
});

$('#modalForm').on('submit', function(event){
//  	alert("저장버튼 누름");
	event.preventDefault();
	
	var formData = new FormData(this);
	
	$.ajax({
		type: 'POST',
		url: '<c:url value="/schedule/acaScheduleInsert.do"/>',  //inset controller 필요
		data: formData,
		processData: false,
		contentType: false,
		success: function(response){
			$('#exampleModal').modal('hide');
			
			if(response.eventId){
				var updatedEvent = calendar.getEventById(response.eventId);
				if(updatedEvent){
					updatedEvent.setProp('title', response.eventTitle);
					updatedEvent.setProp(response.asStart);
					updatedEvent.setProp(response.asEnd);
				}
				location.reload();
				
			} else{
				calendar.refetchEvents();
			}
		},
		error: function(xhr, status, error){
			console.error('Error saving event:', error);
		}
	});
});
    
 	// 저장 버튼 클릭
    $(document).on('click', '#modalForm button[type="submit"]', function (event) {
      event.preventDefault();
      console.log('저장 버튼 클릭');
      // 모달 닫기
      $('#exampleModal').modal('hide');
    });

    // 취소 버튼 클릭
    $(document).on('click', '#exampleModal button[data-dismiss="modal"]', function () {
      console.log('취소 버튼 클릭');
      // 모달 닫기
      $('#exampleModal').modal('hide');
    });
  });
</script>

  
  
  
  
  