package kr.or.ddit.lectureSchedule.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.Errors;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.common.dao.CommonDAO;
import kr.or.ddit.common.vo.ClassRoomVO;
import kr.or.ddit.common.vo.DaytimeScheduleVO;
import kr.or.ddit.lecture.service.LectureService;
import kr.or.ddit.lecture.vo.LectureVO;
import kr.or.ddit.lectureSchedule.service.LectureScheduleService;
import kr.or.ddit.lectureSchedule.vo.LectureScheduleVO;
import kr.or.ddit.serviceresult.ServiceResult;

@Controller
@RequestMapping("/lectureSchedule/")
public class LectureScheduleInsertController {
	
	@Inject
	private LectureScheduleService service;
	@Inject
	private LectureService lectureService;
	
	@Inject
	private CommonDAO commonDAO;
	
	@ModelAttribute("classRoomList")
	public List<ClassRoomVO> classRoomList(){
		return commonDAO.selectClassRoomList();
	}
	
	@ModelAttribute("daytimeScheduleList")
	public List<DaytimeScheduleVO> daytimeScheduleList(){
		return commonDAO.selectDaytimeScheduleList();
	}
	
	@ModelAttribute("lectureSchedule")
	public LectureScheduleVO lecture(String what) {
		LectureScheduleVO lecture = new LectureScheduleVO();
		lecture.setLecCd(what);
		return lecture;
	}
	
	@GetMapping("lectureScheduleInsert.do")
	public String lectureScheduleForm(
			@RequestParam String lecCd
			,Model model
	) {
		LectureVO lecture = lectureService.retrieveLecture(lecCd);
		model.addAttribute("lecture",lecture);
		return "lectureSchedule/ajax/lectureScheduleForm";
	}
	
	@PostMapping(value = "lectureScheduleInsert.do", produces = "text/plain;charset=UTF-8")
	@ResponseBody
	public String lectureScheduleInsert(
			@ModelAttribute("lectureSchedule")LectureScheduleVO schedule
			,@RequestBody LectureScheduleVO lecture
			,Errors errors
			,Model model
			,HttpServletResponse response
	) {
		response.setCharacterEncoding("UTF-8");
	    String status = null;
	    String lecCd = lecture.getLecCd();
	    LectureVO lec = lectureService.retrieveLecture(lecCd);
	    int cnt = (Integer.parseInt(lec.getLecLectCred()));
	    String[] combinedValues = lecture.getCombinedValues();
	    int count = combinedValues.length;
	    service.removeLectureSchedule(lecture);
	    if(count>cnt) {
	    	return status = "선택한 교시가 학점을 초과 했습니다. 다시 선택해주세요.";
	    }else {
		    if (!errors.hasErrors()) {
		        for (String scheCd : combinedValues) {
		            lecture.setScheCd(scheCd);
		            ServiceResult result = service.saveLectureSchedule(lecture);
		            if (ServiceResult.OK != result) {
		                status = "강의실, 강의시간 등록 중 문제 발생";
		            } else {
		            	lectureService.commitLecture(lec);
		            	status = "강의실, 강의시간 등록 완료";
					}
		        }
		    } else {
		    	status = "강의실, 강의시간 등록 중 문제 발생";
		    }
	    }
	    return status;
	}

}
