package kr.or.ddit.subject.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.Errors;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import kr.or.ddit.college.dao.CollegeDAO;
import kr.or.ddit.college.vo.CollegeVO;
import kr.or.ddit.common.dao.CommonDAO;
import kr.or.ddit.common.validate.InsertGroup;
import kr.or.ddit.common.vo.ClassificationVO;
import kr.or.ddit.department.dao.DepartmentDAO;
import kr.or.ddit.department.vo.DepartmentVO;
import kr.or.ddit.serviceresult.ServiceResult;
import kr.or.ddit.subject.service.SubjectService;
import kr.or.ddit.subject.vo.SubjectVO;

@Controller
@RequestMapping("/subject/subjectInsert.do")
public class SubjectInsertController {
	
	@Inject
	private SubjectService service;
	@Inject 
	private DepartmentDAO departmentDAO;
	@Inject
	private CommonDAO commonDAO;
	@Inject
	private CollegeDAO collegeDAO;
	
	@ModelAttribute("departmentList")
	public List<DepartmentVO> departmentList(){
		return departmentDAO.selectDepartmentList();
	}
	@ModelAttribute("classificationList")
	public List<ClassificationVO> classificationList(){
		return commonDAO.selectClassificationList();
	}
	@ModelAttribute("collegeList")
	public List<CollegeVO> collegeList(){
		return collegeDAO.selectCollegeList();
	}
	
	@ModelAttribute("subject")
	public SubjectVO subject() {
		return new SubjectVO();
	}
	
	@GetMapping
	public String subjectForm() {
		return "subject/subjectForm";
	}
	
	@PostMapping
	public String subjectInsert(
		@Validated(InsertGroup.class)@ModelAttribute("subject") SubjectVO subject
		, Errors errors
		, Model model
	) {
		String logicalViewName = null;

		if(!errors.hasErrors()) {
			ServiceResult result = service.createSubject(subject);
			if(ServiceResult.OK == result) {
				logicalViewName = "redirect:/subject/mngSubjectList.do";
			}else {
				model.addAttribute("message", "과목 등록 중 문제 발생");
				logicalViewName = "subject/subjectForm";
			}
		}else {
			logicalViewName = "subject/subjectForm";
		}
		
		return logicalViewName;
	}

}
