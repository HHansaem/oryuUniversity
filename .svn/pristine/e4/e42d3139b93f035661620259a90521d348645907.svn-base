package kr.or.ddit.tuition.controller;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.common.vo.PaginationInfo;
import kr.or.ddit.common.vo.SimpleCondition;
import kr.or.ddit.serviceresult.ServiceResult;
import kr.or.ddit.student.service.StudentService;
import kr.or.ddit.student.vo.StudentVO;

@Controller
@RequestMapping("/tuition/studentReg.do")
public class StudentRegController {

	@Inject
	private StudentService service;
	
	@GetMapping
	public String studentlist(
		@RequestParam(name="page", required = false, defaultValue = "1") long currentPage
		, SimpleCondition simpleCondition
		, Model model
	){
		PaginationInfo<StudentVO> paging = new PaginationInfo<>(10, 5);
		paging.setSimpleCondition(simpleCondition);
		paging.setCurrentPage(currentPage);
		
		List<StudentVO> studentList = service.retrieveStudentList(paging);
		paging.setDataList(studentList);
		
		model.addAttribute("paging", paging);
		
		return "tuition/studentList";
		
	}
	
	@PostMapping(produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseBody
    public String updateSelectedStudents(@RequestBody List<String> stCds) {
		System.out.println("asdasd"+stCds.size());
		String logicalViewName = null;
		for(int i=0; i<stCds.size(); i++) {
			
			ServiceResult result = service.removeStudent(stCds.get(i));
		}
		logicalViewName = "redirect:/";
		return logicalViewName;
//        try {
//        	System.out.println(selectedStudentIds);
//        	System.out.println("asdasdasd");
            // selectedStudentIds를 이용하여 해당 학생들의 정보를 수정하는 로직을 구현합니다.
            // 예를 들어, 선택된 학생들의 정보를 데이터베이스에서 조회하고 수정하는 등의 작업을 수행합니다.

            // 수정이 완료되었다는 메시지를 클라이언트에게 보내줍니다.
//            return ResponseEntity.ok("선택된 학생들의 정보가 성공적으로 수정되었습니다.");
//        } catch (Exception e) {
            // 예외 처리 코드를 추가합니다.
//            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("학생 정보 수정 중 오류가 발생했습니다.");
        }
    }

