<%@ page language="java" contentType="text/html; charset=UTF-8"
   pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<style>
#curve_chart{
   float: left;
   width: 50%;
   margin-left: 50px
}
.avgInfo{
   background-color: rgba(0, 0, 0, 0.03);
   margin: 20px;
   padding-right: 40px;
   width: 51%;
   padding: 20px;
   display: flex;
   flex-direction: row;
    justify-content: space-around;
}
.avgInfo-header{
    color: slategray;
    font-size: 23px;
    font-weight: bold;
}
.avgInfo-body{
	margin-top: 5px;
    margin-left: 109px;
    font-size: 12px;
}
</style>
<div class="card box-shadow d-flex m-4" style="min-height: 87%;">
   <div class="h-100">
      <div class="card-header"
         style="border-radius: 20px 20px 0 0; background-color: #154FA9; font-weight: bold; color: white;">
         전체 성적 조회</div>
      <div class="card avgInfo"></div>
      <div id="curve_chart"></div>
   </div>
</div>

<script type="text/javascript"
   src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
   google.charts.load('current', {'packages':['corechart']});
   google.charts.setOnLoadCallback(drawChart);
   
   // 평균 차트 그리기
   function drawChart() {
     var avgGradeListJson = ${avgGradeListJson};
     var MajorAvgGradeListJson = ${MajorAvgGradeListJson};
     var data = new google.visualization.DataTable();
   
     data.addColumn('string', 'Year');
     data.addColumn('number', '전공');
     data.addColumn('number', '전체');
   
     for (var i = 0; i < avgGradeListJson.length; i++) {
       var enrollmentYear = avgGradeListJson[i].enrollmentYear + '년 ' + avgGradeListJson[i].semester + "학기";
       var avgGrade = parseFloat(avgGradeListJson[i].avgGrade);
       var majorAvgGrade = MajorAvgGradeListJson[i] ? parseFloat(MajorAvgGradeListJson[i].majorAvgGrade) : 0.0;
       data.addRow([enrollmentYear, majorAvgGrade, avgGrade]);
     }
     
     
     console.log("data",data);
   
     var options = {
       title: '',  //연도별 학점 평균
       curveType: 'none',
       legend: {
//           align: 'top'
         position: 'top'
       },
       vAxis: {
         viewWindow: {
           min: 0,
           max: 5
         },
         format: '0.0',
         ticks: [0, 1, 2, 3, 4, 5],
         gridlines: {
           count: 10
         }
       },
       pointSize: 5,
       colors: ['#F16767', '#FFB84C'],
       chartArea: {
         width: '90%', 
         height: '80%',
       },
       backgroundColor: 'transparent',
     };
     
     var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));
     chart.draw(data, options);
   }
   
   var avgGradeListJson = ${avgGradeListJson};
   var majorAvgGradeListJson = ${MajorAvgGradeListJson};
   
   // 전체 평균 계산을 위한 함수
    function totalAverage(dataList) {
       var total = 0;
       var count = 0; // 빈 값을 무시하기 위한 카운터 변수
       for (var i = 0; i < dataList.length; i++) {
           var avgGrade = parseFloat(dataList[i].avgGrade);
           if (!isNaN(avgGrade)) { // 빈 값이 아닌 경우에만 계산
               total += avgGrade;
               count++;
           }
       }
       if (count === 0) {
           return 0; 
       }
       return (total / count).toFixed(2); // 소수점 둘째 자리까지
   }

   // 전공 평균 계산을 위한 함수
    function majorAverage(dataList) {
       var total = 0;
       var count = 0; // 빈 값을 무시하기 위한 카운터 변수
       for (var i = 0; i < dataList.length; i++) {
           var majorAvgGrade = parseFloat(dataList[i].majorAvgGrade);
           if (!isNaN(majorAvgGrade)) { // 빈 값이 아닌 경우에만 계산
               total += majorAvgGrade;
               count++;
           }
       }
       if (count === 0) {
           return 0; 
       }
       return (total / count).toFixed(2); // 소수점 둘째 자리까지
   }
   
    var stdGradeList = ${stdGradeListJson};
    var totalLectCred = stdGradeList[0].totalLectCred;
    var avgGradeAverage = totalAverage(avgGradeListJson);
    var majorAvgGradeAverage = majorAverage(majorAvgGradeListJson);

    var avgInfoDiv = document.querySelector('.avgInfo');

    for (var i = 0; i < 3; i++) { // 세 개의 div를 만듭니다.
        var avgInfoHeaderDiv = document.createElement('div');
        avgInfoHeaderDiv.className = 'avgInfo-header';

        // 세 개의 값을 차례대로 출력합니다.
        switch (i) {
            case 0:
            	avgInfoHeaderDiv.innerHTML = avgGradeAverage;
                break;
            case 1:
            	avgInfoHeaderDiv.innerHTML = majorAvgGradeAverage;
                break;
            case 2:
            	avgInfoHeaderDiv.innerHTML = totalLectCred;
                break;
            default:
                break;
        }

        // avgInfoDiv에 생성한 div 추가
        avgInfoDiv.appendChild(avgInfoHeaderDiv);
    }

    
//     var avgInfoDiv = document.querySelector('.avgInfo-header');
//     avgInfoDiv.innerHTML = avgGradeAverage + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' 
//     						+ majorAvgGradeAverage + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' 
//     						+ totalLectCred;

</script>