<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.lecture.dao.LectureDAO">
	<sql id="searchFrag">
		<where>
			<if test="simpleCondition neq null and simpleCondition.searchWord neq null and not simpleCondition.searchWord.isEmpty">
				<choose>
					<when test="simpleCondition.searchType eq 'code'">
						INSTR(LEC_CD, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'name'">
						INSTR(LEC_LECT_TITLE, #{simpleCondition.searchWord}) > 0
					</when>
					<otherwise>
						INSTR(LEC_CD, #{simpleCondition.searchWord}) > 0
						OR
						INSTR(LEC_LECT_TITLE, #{simpleCondition.searchWord}) > 0
					</otherwise>
				</choose>
			</if>		
		</where>
	</sql>
	
	<resultMap type="kr.or.ddit.lecture.vo.LectureVO" id="lectureMap" autoMapping="true">
		<id property="lecCd" column="LEC_CD"/>
		
		<association property="professor" javaType="kr.or.ddit.professor.vo.ProfessorVO" autoMapping="true">
			<id property="prCd" column="PR_CD"/>
			<result property="prNm" column="PR_NM"/>
		</association>
	</resultMap>

	<select id="selectLectureList" resultMap="lectureMap" parameterType="kr.or.ddit.common.vo.PaginationInfo">
		SELECT B.*
		FROM(
			SELECT ROWNUM RNUM,A.*
			FROM(
				SELECT 
				LEC_CD, SUBJ_CD, PR_CD, LEC_LECT_TITLE, LEC_GRA_CD, LEC_SEME_CD
				, LEC_LECT_CRED, LEC_ENRO_LIMIT, LEC_LECT_DIVISION, LEC_STAT
				, GR_MID, GR_FINAL, GR_ATTEND, GR_ASSI, ATCH_FILE_ID, PR_NM
				FROM LECTURE
				LEFT OUTER JOIN PROFESSOR D USING ( PR_CD)
				<include refid="searchFrag"/>
				ORDER BY LEC_CD DESC
			) A	
		) B
		<![CDATA[
		WHERE RNUM >= #{startRow} AND RNUM <=#{endRow}
		]]>
	</select>

	<select id="selectTotalRecord" resultType="long" parameterType="kr.or.ddit.common.vo.PaginationInfo">
		SELECT COUNT(*)
		FROM LECTURE
	</select>
	
	<select id="selectLecture" resultType="kr.or.ddit.lecture.vo.LectureVO" parameterType="String">
		SELECT *
		FROM LECTURE
		WHERE LEC_CD = #{lecCd}
	</select>
	
	<insert id="insertLecture" parameterType="kr.or.ddit.lecture.vo.LectureVO">
		<selectKey order="BEFORE" resultType="String" keyProperty="lecCd">
			SELECT LECTURE_SEQ.NEXTVAL FROM DUAL
		</selectKey>
			INSERT INTO lecture (
			    LEC_CD,
			    SUBJ_CD,
			    PR_CD,
			    LEC_LECT_TITLE,
			    LEC_GRA_CD,
			    LEC_SEME_CD,
			    LEC_LECT_CRED,
			    LEC_ENRO_LIMIT,
			    LEC_LECT_DIVISION,
			    LEC_STAT,
			    GR_MID,
			    GR_FINAL,
			    GR_ATTEND,
			    GR_ASSI,
			    ATCH_FILE_ID
			) VALUES (
			    #{lecCd,jdbcType=VARCHAR}
				, #{subjCd,jdbcType=VARCHAR}
				, #{prCd,jdbcType=VARCHAR}
				, #{lecLectTitle,jdbcType=VARCHAR}
				, #{lecGraCd,jdbcType=VARCHAR}
				, #{lecSemeCd,jdbcType=VARCHAR}
				, #{lecLectCred,jdbcType=VARCHAR}
				, #{lecEnroLimit,jdbcType=VARCHAR}
				, #{lecLectDivision,jdbcType=VARCHAR}
				, 'ON'
				, #{grMid,jdbcType=NUMERIC}
				, #{grFinal,jdbcType=NUMERIC}
				, #{grAttend,jdbcType=NUMERIC}
				, #{grAssi,jdbcType=NUMERIC}
				, #{atchFileId,jdbcType=NUMERIC}
			)
	</insert>
	
	<select id="selectCurrentLectureList" parameterType="string" resultType="kr.or.ddit.lecture.vo.LectureVO">
		SELECT
		    lec_cd,subj_cd,pr_cd,
		    lec_lect_title,lec_gra_cd,lec_seme_cd,
		    lec_lect_cred,lec_enro_limit,lec_lect_division,
		    lec_stat,gr_mid,gr_final,
		    gr_attend,gr_assi,atch_file_id
		FROM lecture WHERE pr_cd = #{prCd} and LEC_SEME_CD = '1'
	</select>
	
	
</mapper>