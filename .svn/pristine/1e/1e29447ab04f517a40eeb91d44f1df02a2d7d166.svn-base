package kr.or.ddit.thesis.service;

import java.io.File;
import java.io.IOException;
import java.text.MessageFormat;
import java.util.List;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.io.Resource;
import org.springframework.stereotype.Service;

import kr.or.ddit.common.vo.PaginationInfo;
import kr.or.ddit.exception.PKNotFoundException;
import kr.or.ddit.serviceresult.ServiceResult;
import kr.or.ddit.student.vo.StudentVO;
import kr.or.ddit.subject.vo.SubjectVO;
import kr.or.ddit.thesis.dao.ThesisDAO;
import kr.or.ddit.thesis.vo.ThesisVO;

@Service
public class ThesisServiceImpl implements ThesisService {

	@Inject
	 private ThesisDAO thesisDAO;
	
	@Value("#{appInfo.CommonAtchPath}")
	private Resource thesisSaveRes;
	 
	
	private ServiceResult processThesisImage(ThesisVO thesis) {
		if(thesis.getThesImage()==null) return ServiceResult.OK;
		try {
			File saveFile = new File(thesisSaveRes.getFile(), thesis.getThesFic());
			thesis.getThesImage().transferTo(saveFile);
			return ServiceResult.OK;
		}catch (IOException e) {
			throw new RuntimeException(e);
		}
	}
	
	
	
	/**
	 * thesis 등록
	 * @param thesis
	 * @return
	 */
	@Override
	 public ServiceResult createThesis(ThesisVO thesis) {
		ServiceResult result = null;
		int cnt = thesisDAO.insertThesis(thesis);
		if(cnt > 0) {
			result = processThesisImage(thesis);
		}else {
			result = ServiceResult.FAIL;
		}
		return result;
	}

	/**
	 * thesCd를 통한 thesis 조회
	 * @param thesCd
	 * @return ThesisVO thesCd
	 */
	@Override
	public ThesisVO retrieveThesis(String thesCd) {
		ThesisVO thesis = thesisDAO.selectThesis(thesCd);
		if(thesCd==null)
			throw new PKNotFoundException(MessageFormat.format("{0} 해당 논문이 없습니다.", thesCd));
		return thesis;
	}

	/**
	 * 논문 목록 조회
	 * @return
	 */
	@Override
	public List<ThesisVO> retrieveThesisList(PaginationInfo<ThesisVO>  paging) {
		// 토탈자료 개수
		long totalRecord = thesisDAO.selectTotalRecord(paging);
		// 페이징 객체에 토탈레코드 저장
		paging.setTotalRecord(totalRecord);
		// 페이징 객체를 이용하여 전체과목조회 후 리턴
		return thesisDAO.selectThesisList(paging);
	}
	/**
	 * @param thesis
	 * @return
	 */
	@Override
	public ServiceResult modifyThesis(ThesisVO thesis) {
		ServiceResult result = null;
		int cnt = thesisDAO.updateThesis(thesis);
		if(cnt > 0) {
			result = processThesisImage(thesis);
		}else {
			result = ServiceResult.FAIL;
		}
		return result;
	}

	/**
	 * @param thesCd
	 * @return
	 */
	@Override
	public ServiceResult removeThesis(String thesis) {
		ServiceResult result = null;
		try {
			int cnt = thesisDAO.deleteThesis(thesis);
			result = cnt >0 ? ServiceResult.OK : ServiceResult.FAIL ;
		} catch (Exception e) {
			result = ServiceResult.INVALIDPASSWORD;
		}
		return result;
	}
	 
	 
	
}
