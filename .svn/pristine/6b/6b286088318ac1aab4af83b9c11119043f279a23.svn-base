package kr.or.ddit.thesis.vo;

import java.io.Serializable;
import java.time.LocalDate;
import java.util.UUID;

import javax.validation.constraints.NotBlank;

import org.apache.ibatis.type.Alias;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.common.validate.UpdateGroup;
import kr.or.ddit.validate.groups.DeleteGroup;
import kr.or.ddit.validate.groups.InsertGroup;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;

/**
 * @author PC-22 논문 VO입니다.
 */
@Data
@EqualsAndHashCode(of = "thesSn")
public class ThesisVO implements Serializable {

	private long rnum;
	@NotBlank
	private String thesSn; // 논문순번
	@NotBlank(groups = { InsertGroup.class, UpdateGroup.class })
	private String acBuCd; // 학술사업코드
	private String thesClNm; // 논문분류명
	private String thesNm; // 논문명
	private String thesAutNm1; // 논문1저자명
	private String thesAutNm2; // 논문2저자명
	private String thesShortCont; // 논문요약
	private String thesCont; // 논문내용
	private LocalDate thesPostDate; // 논문게시일자
	private LocalDate thesModDate; // 논문수정일자
	private Integer atchFileId; // 첨부파일코드
	private String thesFic; // 논문사진
	
	private MultipartFile thesImage;
	private MultipartFile[] thesFile;

	/**
	 * setThesImage를 만들고, MultipartFile로 thesImage매개변수 
	 * @param thesImage
	 */
	public void setThesImage(MultipartFile thesImage) {
		//thesImage객체가 비어있지 않으면 해당 thesFic에 UUIT하여 String으로 저장.
		if(!thesImage.isEmpty()) {
			this.thesImage = thesImage;
			this.thesFic = UUID.randomUUID().toString();
		}
	}
}
